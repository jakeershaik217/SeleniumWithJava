/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */



plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'base'
    id 'application'
}

/* The above Block and Below commends are Similar
apply plugin: 'java-library'
apply plugin: 'application'
apply plugin: 'java-library'
*/


//This will explicitly set the property in gradle.properties
ext {
   javaMainClass = "SeleniumWithJava.Locators"
}

repositories {
    // Use jcenter for resolving dependencies
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    mavenLocal()
    jcenter()
}

/*
repositories {

//flatDirectory
   flatDir {
   
   dirs 'libs'
   
 }
 
 //giving Repo with URL
            
    maven {
    
    url 'https://repo1.maven.org/maven2/'
    
    }
    
 //giving repo uRL with Credntials   
    maven {
    
    url 'https://repo1.maven.org/maven2/'
    
    credentials{
    
    
    user 'username'
    password 'password'
    
    }
    
    }
    
  //supports File based Repo along with http,https  
    
     Ivy {
    
    url 'file://repo1.maven.org/maven2/'
    
   
    
    }
            
}


application {
    mainClassName = javaMainClass
}

configurations{

custom

}
*/
//dependencies are blocks to set the configuration
dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //here api is name of the configuration and org.apache.commons:commons-math3:3.6.1 is notation of the configuration
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'


    testImplementation 'junit:junit:4.12'
    
    //the following confiuration(compile) is Groovy Map syntax
    compile group: 'ru.yandex.qatools.ashot', name: 'ashot', version: '1.4.3'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '2.41.0'
    
    
    //testCompile is the another configuration as like where the dependencies in testCompile will be available at test class
    //testcompile is extending compile configuration where all dependencies in compile configuration will be available in testcompile
    
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-server-standalone', version: '2.46.0'
    
    //creating custom configuration using configurations block
    
//    custom group: 'org.apache.camel', name: 'camel-salesforce', version: '3.1.0'
    
    //adding mutilipe file locations
   // files('filelocation1','filelocation2','----soon')
    
    //adding file directory with filters
   // fileTree(dir:'directory',include : '*jar')
}



configurations.each { println it.name }

//will copy the source file to destination
task copy(type: Copy, group: "Custom", description: "Copies sources to the dest directory") {
    from "src/main/java/SeleniumWithJava"
    into "dest/main"
    doLast{
    
    println "Completed!"
    
    
    }
}

wrapper{

gradleVersion '6.0'

}

task copyfilefromRepo(type:Copy){

   from "Configurations.custom"
   into "dest/main"


}




//The base plugin works with the settings to create an archive file called basic-demo-1.0.zip in the build/distributions folder.
task zip(type: Zip, group: "Archive", description: "Archives sources in a zip file") {
    from "src"
    setArchiveName "basic-demo-1.0.zip"
}


//**********************************************Goorvy Practice*************************************************************
//<< is LeftShift Operator and it was deprecated in Gradle 4.x and removed in Gradle 5.0
task groovy {
doLast{



}

}

//JavaCode running in Groovy
class SampleJava  {

  public static void RunProgram() {
 
 System.out.println("First Java Code under Groovy Script"); 

}
}

SampleJava run=new SampleJava()
run.RunProgram()


task SampleGroovy{

doLast{



}

}
//int,char like all defineddata types are not accepted in Groovy below line Throws Error
/*def double = 2.5
println "The Value is = ${double}"
*/
def doubleValue = 2.5
println "The Value is = ${doubleValue}"
println "The sum of 5+6 =${5+6}"
println "The name of the doubleValue calss ${doubleValue.class}"
doubleValue="Assigned String Value"
println "The New Value of doubleValue is : ${doubleValue}"


task SimpleFunction{

doLast{

}

}

def SumofTwo(n){//No need to declare type


  n+n //Last Line in a Function will be Return so no need to write Return Statement explicitly

}
def Input=4564
println "The Sum of 2 Times SumofTwo($Input) = ${SumofTwo(Input)}"
